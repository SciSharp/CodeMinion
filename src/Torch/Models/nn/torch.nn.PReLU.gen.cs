// Code generated by CodeMinion: https://github.com/SciSharp/CodeMinion

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using Python.Runtime;
using Numpy;
using Numpy.Models;

namespace Torch
{
    public static partial class torch {
        public static partial class nn {
            /// <summary>
            ///	Applies the element-wise function:
            ///	
            ///	\[\text{PReLU}(x) = \max(0,x) + a * \min(0,x)
            ///	
            ///	\]
            ///	
            ///	or
            ///	
            ///	\[\text{PReLU}(x) =
            ///	\begin{cases}
            ///	x, & \text{ if } x \geq 0 \\
            ///	ax, & \text{ otherwise }
            ///	\end{cases}
            ///	
            ///	\]
            ///	
            ///	Here \(a\) is a learnable parameter.<br></br>
            ///	 When called without arguments, nn.PReLU() uses a single
            ///	parameter \(a\) across all input channels.<br></br>
            ///	 If called with nn.PReLU(nChannels),
            ///	a separate \(a\) is used for each input channel.<br></br>
            ///	
            ///	Note
            ///	weight decay should not be used when learning \(a\) for good performance.<br></br>
            ///	
            ///	Note
            ///	Channel dim is the 2nd dim of input.<br></br>
            ///	 When input has dims &lt; 2, then there is
            ///	no channel dim and the number of channels = 1.
            /// </summary>
            public partial class PReLU : Module
            {
                // auto-generated class
                
                public PReLU(PyObject pyobj) : base(pyobj) { }
                
                public PReLU(Module other) : base(other.PyObject as PyObject) { }
                
                public PReLU(int num_parameters = 1, float init = 0.25f)
                {
                    //auto-generated code, do not change
                    var nn = self.GetAttr("nn");
                    var __self__=nn;
                    var pyargs=ToTuple(new object[]
                    {
                    });
                    var kwargs=new PyDict();
                    if (num_parameters!=1) kwargs["num_parameters"]=ToPython(num_parameters);
                    if (init!=0.25f) kwargs["init"]=ToPython(init);
                    dynamic py = __self__.InvokeMethod("PReLU", pyargs, kwargs);
                    self=py as PyObject;
                }
                
            }
        }
    }
    
}
