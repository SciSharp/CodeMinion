// Code generated by CodeMinion: https://github.com/SciSharp/CodeMinion

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using Python.Runtime;
using Numpy;
using Numpy.Models;

namespace Torch
{
    public static partial class torch {
        public static partial class nn {
            /// <summary>
            /// Creates a criterion that uses a squared term if the absolute
            /// element-wise error falls below 1 and an L1 term otherwise.
            /// It is less sensitive to outliers than the MSELoss and in some cases
            /// prevents exploding gradients (e.g. see Fast R-CNN paper by Ross Girshick).
            /// Also known as the Huber loss:
            /// </summary>
            public partial class SmoothL1Loss : PythonObject
            {
                // auto-generated class
                
                public SmoothL1Loss(PyObject pyobj) : base(pyobj) { }
                
            }
        }
    }
    
}
