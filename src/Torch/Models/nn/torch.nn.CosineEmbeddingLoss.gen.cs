// Code generated by CodeMinion: https://github.com/SciSharp/CodeMinion

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using Python.Runtime;
using Numpy;
using Numpy.Models;

namespace Torch
{
    public static partial class torch {
        public static partial class nn {
            /// <summary>
            /// Creates a criterion that measures the loss given input tensors
            /// \(x_1\), \(x_2\) and a Tensor label \(y\) with values 1 or -1.
            /// This is used for measuring whether two inputs are similar or dissimilar,
            /// using the cosine distance, and is typically used for learning nonlinear
            /// embeddings or semi-supervised learning.
            /// </summary>
            public partial class CosineEmbeddingLoss : PythonObject
            {
                // auto-generated class
                
                public CosineEmbeddingLoss(PyObject pyobj) : base(pyobj) { }
                
            }
        }
    }
    
}
