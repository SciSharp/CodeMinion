// Code generated by CodeMinion: https://github.com/SciSharp/CodeMinion

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using Python.Runtime;
using Numpy;
using Numpy.Models;

namespace Torch
{
    public static partial class torch {
        public static partial class nn {
            /// <summary>
            ///	Applies the element-wise function:
            ///	
            ///	\[\text{ELU}(x) = \max(0,x) + \min(0, \alpha * (\exp(x) - 1))
            ///	
            ///	\]
            /// </summary>
            public partial class ELU : Module
            {
                // auto-generated class
                
                public ELU(PyObject pyobj) : base(pyobj) { }
                
                public ELU(Module other) : base(other.PyObject as PyObject) { }
                
                public ELU(double alpha = 1.0, bool inplace = false)
                {
                    //auto-generated code, do not change
                    var nn = self.GetAttr("nn");
                    var __self__=nn;
                    var pyargs=ToTuple(new object[]
                    {
                    });
                    var kwargs=new PyDict();
                    if (alpha!=1.0) kwargs["alpha"]=ToPython(alpha);
                    if (inplace!=false) kwargs["inplace"]=ToPython(inplace);
                    dynamic py = __self__.InvokeMethod("ELU", pyargs, kwargs);
                    self=py as PyObject;
                }
                
            }
        }
    }
    
}
