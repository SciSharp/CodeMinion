//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flee.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GeneralErrors {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GeneralErrors() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Flee.Resources.GeneralErrors", typeof(GeneralErrors).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot determine type of new variable.
        /// </summary>
        internal static string CannotDetermineNewVariableType {
            get {
                return ResourceManager.GetString("CannotDetermineNewVariableType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a public and static method &apos;{0}&apos; on type &apos;{1}&apos;.
        /// </summary>
        internal static string CouldNotFindPublicStaticMethodOnType {
            get {
                return ResourceManager.GetString("CouldNotFindPublicStaticMethodOnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid namespace name.
        /// </summary>
        internal static string InvalidNamespaceName {
            get {
                return ResourceManager.GetString("InvalidNamespaceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid variable name.
        /// </summary>
        internal static string InvalidVariableName {
            get {
                return ResourceManager.GetString("InvalidVariableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the new owner is not assignable to the current owner type.
        /// </summary>
        internal static string NewOwnerTypeNotAssignableToCurrentOwner {
            get {
                return ResourceManager.GetString("NewOwnerTypeNotAssignableToCurrentOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only public and static methods can be imported.
        /// </summary>
        internal static string OnlyPublicStaticMethodsCanBeImported {
            get {
                return ResourceManager.GetString("OnlyPublicStaticMethodsCanBeImported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is not accessible to the expression.
        /// </summary>
        internal static string TypeNotAccessibleToExpression {
            get {
                return ResourceManager.GetString("TypeNotAccessibleToExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined variable &apos;{0}&apos;.
        /// </summary>
        internal static string UndefinedVariable {
            get {
                return ResourceManager.GetString("UndefinedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value type of &apos;{0}&apos; is not assignable to required type of &apos;{1}&apos;.
        /// </summary>
        internal static string VariableValueNotAssignableToType {
            get {
                return ResourceManager.GetString("VariableValueNotAssignableToType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A variable with name &apos;{0}&apos; is already defined.
        /// </summary>
        internal static string VariableWithNameAlreadyDefined {
            get {
                return ResourceManager.GetString("VariableWithNameAlreadyDefined", resourceCulture);
            }
        }
    }
}
